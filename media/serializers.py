import logging

from rest_framework import serializers

from media.models import S3Object


logger = logging.getLogger(__name__)


class S3ObjectSerializer(serializers.ModelSerializer):
    url = serializers.SerializerMethodField()
    filename = serializers.SerializerMethodField()
    id = serializers.IntegerField(required=True)
    
    class Meta:
        model = S3Object
        fields = ('id', 'url', 'filename')
        read_only_fields = ('key', 'bucket')
        
        
    def get_url(self, obj):
        """
        Returns the url generated by the S3Object
        """
        return obj.generate_url()

    def get_filename(self, obj):
        """
        Returns the filename, a subset of the key
        """
        return obj.key.split('/')[-1]


class S3ObjectFieldSerializer(serializers.ModelSerializer):
    url = serializers.SerializerMethodField()
    filename = serializers.SerializerMethodField()
    id = serializers.IntegerField(required=True)
    
    class Meta:
        model = S3Object
        fields = ('id', 'url', 'filename')
        read_only_fields = ('key', 'bucket')
        
        
    def get_url(self, obj):
        """
        Returns the url generated by the S3Object
        """
        return obj.generate_url()

    def get_filename(self, obj):
        """
        Returns the filename, a subset of the key
        """
        return obj.key.split('/')[-1]